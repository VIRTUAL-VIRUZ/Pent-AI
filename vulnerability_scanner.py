
import requests
from modules.utils import parse_html

class VulnerabilityScanner:
    def scan(self, url, subdomains):
        vulnerabilities = []
        for subdomain in subdomains:
            if self.check_sqli(subdomain):
                vulnerabilities.append({'type': 'SQL Injection', 'url': subdomain})
            if self.check_xss(subdomain):
                vulnerabilities.append({'type': 'XSS', 'url': subdomain})
            if self.check_csrf(subdomain):
                vulnerabilities.append({'type': 'CSRF', 'url': subdomain})
        return vulnerabilities

    def check_sqli(self, url):
        sqli_payload = "' OR 1=1--"
        response = requests.get(url, params={'id': sqli_payload})
        return 'SQL syntax' in response.text

    def check_xss(self, url):
        xss_payload = "<script>alert('XSS')</script>"
        response = requests.get(url, params={'q': xss_payload})
        return xss_payload in response.text

    def check_csrf(self, url):
        response = requests.get(url)
        return "csrf-token" not in response.text
